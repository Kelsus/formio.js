[
  {
    "name": "BaseComponent#createTooltip",
    "filePath": "src/components/base/Base.js",
    "lines": [
      {
        "lineNumber": 938,
        "line": "  /**\r"
      },
      {
        "lineNumber": 939,
        "line": "   * Create the HTML element for the tooltip of this component.\r"
      },
      {
        "lineNumber": 940,
        "line": "   * @param {HTMLElement} container - The containing element that will contain this tooltip.\r"
      },
      {
        "lineNumber": 941,
        "line": "   */\r"
      },
      {
        "lineNumber": 942,
        "line": "  createTooltip(container, component, classes) {\r"
      }
    ],
    "codeParams": [
      "container",
      "component",
      "classes"
    ],
    "docParams": [
      "container"
    ]
  },
  {
    "name": "BaseComponent#appendChild",
    "filePath": "src/components/base/Base.js",
    "lines": [
      {
        "lineNumber": 1172,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1173,
        "line": "   * Append different types of children.\r"
      },
      {
        "lineNumber": 1174,
        "line": "   *\r"
      },
      {
        "lineNumber": 1175,
        "line": "   * @param child\r"
      },
      {
        "lineNumber": 1176,
        "line": "   */\r"
      },
      {
        "lineNumber": 1177,
        "line": "  appendChild(element, child) {\r"
      }
    ],
    "codeParams": [
      "element",
      "child"
    ],
    "docParams": [
      "child"
    ]
  },
  {
    "name": "BaseComponent#ce",
    "filePath": "src/components/base/Base.js",
    "lines": [
      {
        "lineNumber": 1191,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1192,
        "line": "   * Alias for document.createElement.\r"
      },
      {
        "lineNumber": 1193,
        "line": "   *\r"
      },
      {
        "lineNumber": 1194,
        "line": "   * @param {string} type - The type of element to create\r"
      },
      {
        "lineNumber": 1195,
        "line": "   * @param {Object} attr - The element attributes to add to the created element.\r"
      },
      {
        "lineNumber": 1196,
        "line": "   * @param {Various} children - Child elements. Can be a DOM Element, string or array of both.\r"
      },
      {
        "lineNumber": 1197,
        "line": "   * @param {Object} events\r"
      },
      {
        "lineNumber": 1198,
        "line": "   *\r"
      },
      {
        "lineNumber": 1199,
        "line": "   * @return {HTMLElement} - The created element.\r"
      },
      {
        "lineNumber": 1200,
        "line": "   */\r"
      },
      {
        "lineNumber": 1201,
        "line": "  ce(type, attr, children = null) {\r"
      }
    ],
    "codeParams": [
      "type",
      "attr",
      "children"
    ],
    "docParams": [
      "type",
      "attr",
      "children",
      "events"
    ]
  },
  {
    "name": "BaseComponent#addInput",
    "filePath": "src/components/base/Base.js",
    "lines": [
      {
        "lineNumber": 1528,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1529,
        "line": "   * Add a new input to this comonent.\r"
      },
      {
        "lineNumber": 1530,
        "line": "   *\r"
      },
      {
        "lineNumber": 1531,
        "line": "   * @param input\r"
      },
      {
        "lineNumber": 1532,
        "line": "   * @param container\r"
      },
      {
        "lineNumber": 1533,
        "line": "   * @param noSet\r"
      },
      {
        "lineNumber": 1534,
        "line": "   */\r"
      },
      {
        "lineNumber": 1535,
        "line": "  addInput(input, container) {\r"
      }
    ],
    "codeParams": [
      "input",
      "container"
    ],
    "docParams": [
      "input",
      "container",
      "noSet"
    ]
  },
  {
    "name": "BaseComponent#calculateValue",
    "filePath": "src/components/base/Base.js",
    "lines": [
      {
        "lineNumber": 1729,
        "line": "  /**\r"
      },
      {
        "lineNumber": 1730,
        "line": "   * Perform a calculated value operation.\r"
      },
      {
        "lineNumber": 1731,
        "line": "   *\r"
      },
      {
        "lineNumber": 1732,
        "line": "   * @param data - The global data object.\r"
      },
      {
        "lineNumber": 1733,
        "line": "   *\r"
      },
      {
        "lineNumber": 1734,
        "line": "   * @return {boolean} - If the value changed during calculation.\r"
      },
      {
        "lineNumber": 1735,
        "line": "   */\r"
      },
      {
        "lineNumber": 1736,
        "line": "  calculateValue(data, flags) {\r"
      }
    ],
    "codeParams": [
      "data",
      "flags"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "FormioComponents#createComponent",
    "filePath": "src/components/Components.js",
    "lines": [
      {
        "lineNumber": 99,
        "line": "  /**\r"
      },
      {
        "lineNumber": 100,
        "line": "   * Create a new component and add it to the components array.\r"
      },
      {
        "lineNumber": 101,
        "line": "   *\r"
      },
      {
        "lineNumber": 102,
        "line": "   * @param component\r"
      },
      {
        "lineNumber": 103,
        "line": "   * @param data\r"
      },
      {
        "lineNumber": 104,
        "line": "   */\r"
      },
      {
        "lineNumber": 105,
        "line": "  createComponent(component, options, data) {\r"
      }
    ],
    "codeParams": [
      "component",
      "options",
      "data"
    ],
    "docParams": [
      "component",
      "data"
    ]
  },
  {
    "name": "SelectComponent#addOption",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 85,
        "line": "  /**\r"
      },
      {
        "lineNumber": 86,
        "line": "   * Adds an option to the select dropdown.\r"
      },
      {
        "lineNumber": 87,
        "line": "   *\r"
      },
      {
        "lineNumber": 88,
        "line": "   * @param value\r"
      },
      {
        "lineNumber": 89,
        "line": "   * @param label\r"
      },
      {
        "lineNumber": 90,
        "line": "   */\r"
      },
      {
        "lineNumber": 91,
        "line": "  addOption(value, label, attr) {\r"
      }
    ],
    "codeParams": [
      "value",
      "label",
      "attr"
    ],
    "docParams": [
      "value",
      "label"
    ]
  },
  {
    "name": "FormioForm#onChange",
    "filePath": "src/formio.form.js",
    "lines": [
      {
        "lineNumber": 862,
        "line": "  /**\r"
      },
      {
        "lineNumber": 863,
        "line": "   * Trigger the change event for this form.\r"
      },
      {
        "lineNumber": 864,
        "line": "   *\r"
      },
      {
        "lineNumber": 865,
        "line": "   * @param changed\r"
      },
      {
        "lineNumber": 866,
        "line": "   * @param flags\r"
      },
      {
        "lineNumber": 867,
        "line": "   */\r"
      },
      {
        "lineNumber": 868,
        "line": "  onChange(flags, changed) {\r"
      }
    ],
    "codeParams": [
      "flags",
      "changed"
    ],
    "docParams": [
      "changed",
      "flags"
    ]
  },
  {
    "name": "FormioForm#submit",
    "filePath": "src/formio.form.js",
    "lines": [
      {
        "lineNumber": 973,
        "line": "  /**\r"
      },
      {
        "lineNumber": 974,
        "line": "   * Submits the form.\r"
      },
      {
        "lineNumber": 975,
        "line": "   *\r"
      },
      {
        "lineNumber": 976,
        "line": "   * @example\r"
      },
      {
        "lineNumber": 977,
        "line": "   * let form = new FormioForm(document.getElementById('formio'));\r"
      },
      {
        "lineNumber": 978,
        "line": "   * form.src = 'https://examples.form.io/example';\r"
      },
      {
        "lineNumber": 979,
        "line": "   * form.submission = {data: {\r"
      },
      {
        "lineNumber": 980,
        "line": "   *   firstName: 'Joe',\r"
      },
      {
        "lineNumber": 981,
        "line": "   *   lastName: 'Smith',\r"
      },
      {
        "lineNumber": 982,
        "line": "   *   email: 'joe@example.com'\r"
      },
      {
        "lineNumber": 983,
        "line": "   * }};\r"
      },
      {
        "lineNumber": 984,
        "line": "   * form.submit().then((submission) => {\r"
      },
      {
        "lineNumber": 985,
        "line": "   *   console.log(submission);\r"
      },
      {
        "lineNumber": 986,
        "line": "   * });\r"
      },
      {
        "lineNumber": 987,
        "line": "   *\r"
      },
      {
        "lineNumber": 988,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers.\r"
      },
      {
        "lineNumber": 989,
        "line": "   *\r"
      },
      {
        "lineNumber": 990,
        "line": "   * @returns {Promise} - A promise when the form is done submitting.\r"
      },
      {
        "lineNumber": 991,
        "line": "   */\r"
      },
      {
        "lineNumber": 992,
        "line": "  submit(before, options) {\r"
      }
    ],
    "codeParams": [
      "before",
      "options"
    ],
    "docParams": [
      "before"
    ]
  }
]